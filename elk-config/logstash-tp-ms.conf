input {
    file {
    tags => "blog-post-api"
    path => "C:/Users/aruns/Downloads/hackathon/tp/tp-blog-post-api.*.log"
    codec => multiline {
        pattern => "^%{TIMESTAMP_ISO8601} "
        negate => true
        what => "previous"
        }
    }
    file {
    tags => "api-gateway"
    path => "C:/Users/aruns/Downloads/hackathon/tp/tp-api-gateway.*.log"
    codec => multiline {
        pattern => "^%{TIMESTAMP_ISO8601} "
        negate => true
        what => "previous"
        }
    }
    file {
    tags => "auth-api"
    path => "C:/Users/aruns/Downloads/hackathon/tp/tp-auth-api.*.log"
    codec => multiline {
        pattern => "^%{TIMESTAMP_ISO8601} "
        negate => true
        what => "previous"
        }
    }
    file {
    tags => "topic-management-api"
    path => "C:/Users/aruns/Downloads/hackathon/tp/tp-topic-management-api.*.log"
    codec => multiline {
        pattern => "^%{TIMESTAMP_ISO8601} "
        negate => true
        what => "previous"
        }
    }
    file {
    tags => "language-management-api"
    path => "C:/Users/aruns/Downloads/hackathon/tp/tp-language-management-api.*.log"
    codec => multiline {
        pattern => "^%{TIMESTAMP_ISO8601} "
        negate => true
        what => "previous"
        }
    }
    file {
    tags => "user-profile-api"
    path => "C:/Users/aruns/Downloads/hackathon/tp/tp-user-profile-api.*.log"
    codec => multiline {
        pattern => "^%{TIMESTAMP_ISO8601} "
        negate => true
        what => "previous"
        }
    }
}
filter {
    date {
        match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
}
output {
  stdout {
    codec => rubydebug
  }
  elasticsearch {
    hosts => ["http://localhost:9200"]
  }
}